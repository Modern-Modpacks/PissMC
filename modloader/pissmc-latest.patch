diff -Nru decomped/src/main/java/com/mojang/rubydung/pissmc/Event.java src/main/java/com/mojang/rubydung/pissmc/Event.java
--- decomped/src/main/java/com/mojang/rubydung/pissmc/Event.java	1970-01-01 03:00:00.000000000 +0300
+++ src/main/java/com/mojang/rubydung/pissmc/Event.java	2023-09-23 21:37:42.227299923 +0300
@@ -0,0 +1,8 @@
+package com.mojang.rubydung.pissmc;
+
+public enum Event {
+    GAME_LOAD,
+    GAME_DESTROY,
+    PRE_PLAYER_TICK,
+    POST_PLAYER_TICK
+}
diff -Nru decomped/src/main/java/com/mojang/rubydung/pissmc/EventResult.java src/main/java/com/mojang/rubydung/pissmc/EventResult.java
--- decomped/src/main/java/com/mojang/rubydung/pissmc/EventResult.java	1970-01-01 03:00:00.000000000 +0300
+++ src/main/java/com/mojang/rubydung/pissmc/EventResult.java	2023-09-24 20:33:09.691734989 +0300
@@ -0,0 +1,15 @@
+package com.mojang.rubydung.pissmc;
+
+public class EventResult {
+    private boolean canceled = false;
+
+    public void setCanceled(boolean newVal) {
+        canceled = newVal;
+    }
+    public void cancel() {
+        setCanceled(true);
+    }
+    public boolean isCanceled() {
+        return canceled;
+    }
+}
diff -Nru decomped/src/main/java/com/mojang/rubydung/pissmc/Loader.java src/main/java/com/mojang/rubydung/pissmc/Loader.java
--- decomped/src/main/java/com/mojang/rubydung/pissmc/Loader.java	1970-01-01 03:00:00.000000000 +0300
+++ src/main/java/com/mojang/rubydung/pissmc/Loader.java	2023-09-23 22:58:36.745363499 +0300
@@ -0,0 +1,56 @@
+package com.mojang.rubydung.pissmc;
+
+import java.io.File;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.lang.reflect.InvocationTargetException;
+import java.net.URL;
+import java.net.URLClassLoader;
+import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.function.Consumer;
+
+import com.google.gson.Gson;
+import com.google.gson.JsonObject;
+
+public class Loader {
+    private static HashMap<Event, ArrayList<Consumer<EventResult>>> eventHandlers = new HashMap<>();
+
+    public static void create() throws ClassNotFoundException, NoSuchMethodException, SecurityException, InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException, IOException {
+        for (Event e : Event.values()) {
+            eventHandlers.put(e, new ArrayList<>());
+        }
+        
+        File modsDir = Paths.get(System.getProperty("user.dir"), "mods").toFile();
+        if (!modsDir.exists()) modsDir.mkdir();
+
+        for (File f : modsDir.listFiles()) {
+            if (!f.getName().endsWith(".jar")) continue;
+            URLClassLoader jarLoader = new URLClassLoader(new URL[]{f.toURI().toURL()});
+
+            String mainClass;
+            try {
+                mainClass = new Gson().fromJson(new InputStreamReader(jarLoader.getResourceAsStream("META-INF/piss.json")), JsonObject.class).get("class").getAsString();
+            } catch (Exception e) {
+                System.out.println(String.format("Ignoring \"%s\" mod (broken jar)", f.getName().split(".")[0]));
+                e.printStackTrace();
+                continue;
+            }
+            
+            Class<?> modClass = jarLoader.loadClass(mainClass);
+            modClass.getConstructor().newInstance();
+            jarLoader.close();
+        }
+    }
+    public static void addEventHandler(Event e, Consumer<EventResult> handler) {
+        eventHandlers.get(e).add(handler);
+    }
+    public static EventResult triggerEvent(Event e) {
+        EventResult result = new EventResult();
+        for (Consumer<EventResult> h : eventHandlers.get(e)) {
+            h.accept(result);
+        }
+        return result;
+    }
+}
diff -Nru decomped/src/main/java/com/mojang/rubydung/Player.java src/main/java/com/mojang/rubydung/Player.java
--- decomped/src/main/java/com/mojang/rubydung/Player.java	2023-09-27 21:24:20.687209901 +0300
+++ src/main/java/com/mojang/rubydung/Player.java	2023-09-22 23:51:40.293621506 +0300
@@ -25,6 +25,10 @@
   public float yd;
   
   public float zd;
+
+  public float xa;
+
+  public float ya;
   
   public float yRot;
   
@@ -68,8 +72,8 @@
     this.xo = this.x;
     this.yo = this.y;
     this.zo = this.z;
-    float xa = 0.0F;
-    float ya = 0.0F;
+    this.xa = 0.0F;
+    this.ya = 0.0F;
     if (Keyboard.isKeyDown(19))
       resetPos(); 
     if (Keyboard.isKeyDown(200) || Keyboard.isKeyDown(17))
diff -Nru decomped/src/main/java/com/mojang/rubydung/RubyDung.java src/main/java/com/mojang/rubydung/RubyDung.java
--- decomped/src/main/java/com/mojang/rubydung/RubyDung.java	2023-09-27 21:24:20.727209831 +0300
+++ src/main/java/com/mojang/rubydung/RubyDung.java	2023-09-24 21:23:02.689563366 +0300
@@ -3,7 +3,11 @@
 import com.mojang.rubydung.level.Chunk;
 import com.mojang.rubydung.level.Level;
 import com.mojang.rubydung.level.LevelRenderer;
+import com.mojang.rubydung.pissmc.Event;
+import com.mojang.rubydung.pissmc.Loader;
+
 import java.io.IOException;
+import java.lang.reflect.InvocationTargetException;
 import java.nio.FloatBuffer;
 import java.nio.IntBuffer;
 import javax.swing.JOptionPane;
@@ -17,7 +21,7 @@
 import org.lwjgl.util.glu.GLU;
 
 public class RubyDung implements Runnable {
-  private static final boolean FULLSCREEN_MODE = false;
+  private static RubyDung instance;
   
   private int width;
   
@@ -32,15 +36,19 @@
   private LevelRenderer levelRenderer;
   
   private Player player;
-  
-  public void init() throws LWJGLException, IOException {
-    int col = 920330;
-    float fr = 0.5F;
-    float fg = 0.8F;
-    float fb = 1.0F;
+
+  public int col = 920330;
+  public float fr = 0.5F;
+  public float fg = 0.8F;
+  public float fb = 1.0F;
+  
+  public void init() throws LWJGLException, IOException, ClassNotFoundException, NoSuchMethodException, SecurityException, InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
+    instance = this;
+    Loader.create();
     this.fogColor.put(new float[] { (col >> 16 & 0xFF) / 255.0F, (col >> 8 & 0xFF) / 255.0F, (col & 0xFF) / 255.0F, 1.0F });
     this.fogColor.flip();
     Display.setDisplayMode(new DisplayMode(1024, 768));
+    Display.setTitle("Minecraft rd-132211 (PissMC powered)");
     Display.create();
     Keyboard.create();
     Mouse.create();
@@ -59,6 +67,7 @@
     this.levelRenderer = new LevelRenderer(this.level);
     this.player = new Player(this.level);
     Mouse.setGrabbed(true);
+    Loader.triggerEvent(Event.GAME_LOAD);
   }
   
   public void destroy() {
@@ -78,7 +87,9 @@
     long lastTime = System.currentTimeMillis();
     int frames = 0;
     try {
-      while (!Keyboard.isKeyDown(1) && !Display.isCloseRequested()) {
+      while (true) {
+        if ((Keyboard.isKeyDown(1) || Display.isCloseRequested()) && !Loader.triggerEvent(Event.GAME_DESTROY).isCanceled()) break;
+
         this.timer.advanceTime();
         for (int i = 0; i < this.timer.ticks; i++)
           tick(); 
@@ -99,7 +110,9 @@
   }
   
   public void tick() {
+    Loader.triggerEvent(Event.PRE_PLAYER_TICK);
     this.player.tick();
+    Loader.triggerEvent(Event.POST_PLAYER_TICK);
   }
   
   private void moveCameraToPlayer(float a) {
@@ -235,4 +248,11 @@
   public static void main(String[] args) throws LWJGLException {
     (new Thread(new RubyDung())).start();
   }
+
+  public static RubyDung getInstance() {
+    return instance;
+  }
+  public Player getPlayer() {
+    return player;
+  }
 }
